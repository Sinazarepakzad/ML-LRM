# KNN
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn                        import metrics, svm
from sklearn.linear_model           import LinearRegression
from sklearn.linear_model           import LogisticRegression
from sklearn.tree                   import DecisionTreeClassifier
from sklearn.neighbors              import KNeighborsClassifier
from sklearn.discriminant_analysis  import LinearDiscriminantAnalysis
from sklearn.naive_bayes            import GaussianNB
from sklearn.svm                    import SVC
#####################################################################################
dataset = pd.read_csv('1_KNN_Data.csv')
dataset.head()
names = ['orient', 'diameter', 'length', 'timestep', 'str', 'bc', 'temp', 'potential', 'modulus', 'strength']
X = pd.DataFrame(dataset.iloc[:, :8].values)
Y = pd.DataFrame(dataset.iloc[:, 8:9].values)
Modulus = pd.DataFrame(dataset.iloc[:, 8].values)
Diameter = pd.DataFrame(dataset.iloc[:, 1].values)
plt.scatter(Diameter, Modulus)
plt.show()
#print(X)
#print(Y)
#####################################################################################
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 0)
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
scaler = StandardScaler()
scaler.fit(X_train)
X_train = scaler.transform (X_train)
X_test = scaler.transform (X_test)
from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier(n_neighbors=1)
classifier.fit(X_train,Y_train.values.ravel())
